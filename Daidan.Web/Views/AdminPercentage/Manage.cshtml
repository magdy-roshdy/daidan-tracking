@model Daidan.Entities.MonthAminPercentage

@{
    ViewBag.Title = "Edit Month Admin Percentage";
}
<style type="text/css">
	#app {
		width: 100%;
		height: 100%;
		min-height: 100%;
		border: solid 1px #C0C0C0;
		display: block;
		margin: 5px;
	}

	
	html, body {
		height: 100%;
	}

	.fill {
		min-height: 100%;
		height: 100%;
	}

	.round-corner {
		border-radius: 10px;
		-webkit-border-radius: 10px;
		-moz-border-radius: 10px;
	}

	.vertical-alignment {
	  position: relative;
	  top: 50%;
	  transform: translateY(-50%);
	}

	#addCustomerModal .modal-body .row,
	#addMaterialModal .modal-body .row
	{
		margin: 5px;
	}

	.message
	{
		 text-align: center;
		 font-style: italic;
		 color: #818181;
	}
</style>
<div class="fill" style="margin-top: 5px;">
	<div id="app" ng-app="adminPercentageApp" ng-controller="AdminPercentageController">
		<div class="row fill">
			<div class="col-lg-3 fill" style="overflow: auto;">
				<div style="margin-left: 15px;">
					<h3>
						<strong>{{monthCaption}}</strong> Materials
					</h3>
					<hr />
					<a class="vertical-alignment" href="#" style="display: block;"
					   ng-click="openAddMaterialModal();">+ Add Material</a>
					<div class="panel" ng-repeat="material in materialsPercentages" ng-class="getSelectedCalss(material);">
						<div class="panel-heading" style="cursor: pointer;" ng-click="materialClick(material);">
							<h3 class="panel-title"><strong>{{material.Material.Name}}</strong></h3>
						</div>
						<div class="panel-body">
							<table border="0" style="width: 100%;">
								<tr>
									<td style="width: 60px;">Amount:</td>
									<td>
										<input type="text"
												ng-model="material.Amount"
												class="form-control" style="height: 27px; padding: 1px; text-align: center;" />
									</td>
									<td style="width: 80px;vertical-align: middle; padding-left: 5px;">
										<label>
											<input type="checkbox" ng-model="material.IsFixedAmount" />
											Is Fixed
										</label>
									</td>
								</tr>
							</table>
						</div>
						<div class="panel-footer" style="text-align: right;">
							<a href="#" ng-click="deleteMaterial(material);">Delete</a>
						</div>
					</div>
				</div>
			</div>
			<div class="col-lg-9 fill" style="overflow: auto;" id="customersCell">
				<div class="row" style="margin: 12px 5px 12px 0;">
					<div class="col-md-9">&nbsp;</div>
					<div class="col-md-3" style="text-align: right;">
						<button id="saveChangesButton" class="btn btn-primary" ng-click="saveChanges();"
								type="button" style="font-size: 12pt;">
							Save Changes &nbsp;
							<i class="fa fa-floppy-o"></i>
						</button>
					</div>
				</div>
				<hr style="margin: 0px;" />
				<div class="row" ng-show="currentMaterial">
					<div class="col-lg-10">
						<h3>Customer Percentage for <strong>{{currentMaterial.Material.Name}}</strong></h3>
					</div>
					<div class="col-lg-2" style="height: 40px;">
						<a class="vertical-alignment" href="#" ng-click="openAddCustomerModal();" ng-show="currentMaterial">+ Add Customer</a>
					</div>
				</div>
				<hr ng-show="currentMaterial" />
				<div class="message"
					 ng-show="currentMaterial && currentMaterial.CustomersPercentage.length == 0">
					<br />
					<h4>Add any customer you want to apply special admin fees calculation on</h4>
				</div>

				<div class="message" ng-show="!currentMaterial">
					<br /><br /><br />
					<h4>Click on any material to show and edit the customer under that material</h4>
				</div>

				<table style="width: 100%;" class="table table-bordered"
					   ng-show="currentMaterial && currentMaterial.CustomersPercentage.length > 0">
					<thead>
						<tr style="background-color: #F5F5F5;">
							<th style="width: 300px;">Customer</th>
							<th style="width: 80px;">Amount</th>
							<th>Is Fixed</th>
							<td style="width: 1px;"></td>
							<th>Gross Profit</th>
							<th>Admin Amount</th>
							<th>Net Profit</th>
							<td style="width: 1px;"></td>
							<th style="width: 50px;">&nbsp;</th>
						</tr>
					</thead>
					<tbody>
						<tr ng-repeat="customersPercentages in currentMaterial.CustomersPercentage">
							<td>{{customersPercentages.Customer.Name}}</td>
							<td>
								<input class="form-control" style="height: 27px; text-align: center;" ng-model="customersPercentages.Amount" />
							</td>
							<td>
								<input type="checkbox" ng-model="customersPercentages.IsFixedAmount" />
							</td>
							<td>&nbsp;</td>
							<td>650</td>
							<td>{{customersPercentages.IsFixedAmount ? customersPercentages.Amount : (customersPercentages.Amount/100) * 650 }}</td>
							<td>{{customersPercentages.IsFixedAmount ? 650 - customersPercentages.Amount : 650 - ((customersPercentages.Amount/100) * 650) }}</td>
							<td>&nbsp;</td>
							<td style="text-align: center;">
								<img src="/Content/images/delete.png" style='cursor: pointer;'
									 ng-click="deletedCustomer(customersPercentages);" />
							</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>

		<div class="modal fade" id="addCustomerModal">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
						<h4 class="modal-title">
							Add Customer Percentage to <strong>{{currentMaterial.Material.Name}}</strong>
						</h4>
					</div>
					<div class="modal-body">
						<div class="row">
							<div class="col-md-2">Customer:</div>
							<div class="col-md-10">
								<select id="customer" class="form-control">
									<option ng-repeat="customer in getMaterialRemainingCustomers()" value="{{customer.Id}}">
										{{customer.Name}}
									</option>
								</select>
							</div>
						</div>
						<div class="row">
							<div class="col-md-2">Amount:</div>
							<div class="col-md-3">
								<input id="amount" class="form-control" />
							</div>
							<div class="col-md-7">
								<label style="margin-top: 5px;">
									<input id="isFixed" type="checkbox"  />
									Is Fixed Amount
								</label>
							</div>
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-default" data-dismiss="modal" id="closeButton">Close</button>
						<button type="button" class="btn btn-primary" ng-click="saveCustomer(currentMaterial);">Save</button>
					</div>
				</div>
			</div>
		</div>

		<div class="modal fade" id="addMaterialModal">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
						<h4 class="modal-title">
							Add Material
						</h4>
					</div>
					<div class="modal-body">
						<div class="row">
							<div class="col-md-2">Material:</div>
							<div class="col-md-10">
								<select id="material" class="form-control">
									<option ng-repeat="material in getRemainingMaterials()" value="{{material.Id}}">
										{{material.Name}}
									</option>
								</select>
							</div>
						</div>
						<div class="row">
							<div class="col-md-2">Amount:</div>
							<div class="col-md-3">
								<input id="amount" class="form-control" />
							</div>
							<div class="col-md-7">
								<label style="margin-top: 5px;">
									<input id="isFixed" type="checkbox" />
									Is Fixed Amount
								</label>
							</div>
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-default" data-dismiss="modal" id="closeButton">Close</button>
						<button type="button" class="btn btn-primary" ng-click="saveMaterial();">Save</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<input type="hidden" id="monthId" value="@Model.Id.ToString()" />
<input type="hidden" id="monthCaption" value="@Model.MonthCaption" />
<script src="~/Scripts/angular.min.js" type="text/javascript"></script>
<script type="text/javascript">
	var phonecatApp = angular.module('adminPercentageApp', []);

	phonecatApp.controller('AdminPercentageController', function ($scope, $http) {
		$http.get('/AdminPercentage/GetMonthMaterials', {
			params: { 'monthId': $('#monthId').val() }
		}).success(function (data) {
			$scope.materialsPercentages = data.MaterialPercentages;
			$scope.materislList = data.MaterialsList;
			$scope.customersList = data.CustomersList;			
		}
		);

		$scope.monthCaption = $('#monthCaption').val();
		$scope.deletedMaterials = [];
		$scope.deletedCustomers = [];

		$scope.materialClick = function (materialObject) {
			$scope.currentMaterial = materialObject;
		};

		$scope.saveCustomer = function (materialObject) {			
			var newCustomer = {
				'Id': 0,
				'Customer':
					{
						'Name': $('#addCustomerModal #customer').children(':selected').text(),
						'Id': parseInt($('#addCustomerModal #customer').val())
					},
				'Amount': parseInt($('#addCustomerModal #amount').val()),
				'IsFixedAmount': $("#addCustomerModal #isFixed").is(':checked')
			};
			$scope.currentMaterial.CustomersPercentage.push(newCustomer);

			$('#addCustomerModal #closeButton').click();
		};

		$scope.openAddCustomerModal = function () {
			$("#addCustomerModal #isFixed")[0].checked = false;
			$('#addCustomerModal #amount').val('');

			$('#addCustomerModal').modal().show();
		};

		$scope.getMaterialRemainingCustomers = function () {
			var customers = [];
			if ($scope.currentMaterial) {
				$.each($scope.customersList, function (index, customer) {
					var _customer = $.grep($scope.currentMaterial.CustomersPercentage, function (customerPercentage, i) {
						return (customerPercentage.Customer.Id == customer.Id);
					});

					if(_customer.length == 0)
					{
						customers.push(customer);
					}
				});
			}

			return customers;
		};

		$scope.deletedCustomer = function (customerPercentage) {
			if(confirm('Are you sure?')){
				var index = -1;
				$.each($scope.currentMaterial.CustomersPercentage, function (i, _customer) {
					if (_customer.Customer.Id == customerPercentage.Customer.Id) {
						index = i;
					}
				});

				if (index > -1) {
					$scope.currentMaterial.CustomersPercentage.splice(index, 1);

					if (customerPercentage.Id > 0)
						$scope.deletedCustomers.push(customerPercentage.Id);
				}
			}
		};

		$scope.openAddMaterialModal = function () {
			$("#addMaterialModal #isFixed")[0].checked = false;
			$('#addMaterialModal #amount').val('');

			$('#addMaterialModal').modal().show();
		};

		$scope.getRemainingMaterials = function () {
			var materials = [];
			$.each($scope.materislList, function (index, material) {
				var _material = $.grep($scope.materialsPercentages, function (materialPercentage, i) {
					return (materialPercentage.Material.Id == material.Id);
				});

				if (_material.length == 0) {
					materials.push(material);
				}
			});

			return materials;
		};

		$scope.saveMaterial = function () {
			var newMaterialPercentage = {
				'Id': 0,
				'Month' : 
					{
						'Id': parseInt($('#monthId').val())
					},
				'Material':
					{
						'Name': $('#addMaterialModal #material').children(':selected').text(),
						'Id': parseInt($('#addMaterialModal #material').val())
					},
				'Amount': parseInt($('#addMaterialModal #amount').val()),
				'IsFixedAmount': $("#addMaterialModal #isFixed").is(':checked'),
				'CustomersPercentage' : []
			};
			$scope.materialsPercentages.push(newMaterialPercentage);

			$('#addMaterialModal #closeButton').click();
		};

		$scope.deleteMaterial = function (materialPercentage) {
			if (confirm('Are you sure?'))
			{
				var index = -1;
				$.each($scope.materialsPercentages, function (i, _material) {
					if (_material.Material.Id == materialPercentage.Material.Id) {
						index = i;
					}
				});

				if (index > -1) {
					$scope.materialsPercentages.splice(index, 1);

					if (materialPercentage.Id > 0){
						$scope.deletedMaterials.push(materialPercentage.Id);

						if ($scope.currentMaterial.Material.Id == materialPercentage.Material.Id)
							$scope.currentMaterial = null;
					}
				}
			}
		};

		$scope.saveChanges = function () {
			$('#saveChangesButton').attr('disabled', 'disabled');

			$http.post('/AdminPercentage/SaveMonthPercentages',
					{
						'monthMaterialPercentages': $scope.materialsPercentages, 'monthId': $('#monthId').val(),
						'materialsToDelete': $scope.deletedMaterials, 'customersToDelete': $scope.deletedCustomers
					}
				).
			  then(function (response) {
			  	window.location = response.data.url;
			  }, function (response) {
			  	alert('Some error happened while saving month percentage information, please contact the system engineer.');
			  	$('#saveChangesButton').removeAttr('disabled');
			  });
		};

		$scope.getSelectedCalss = function (material) {
			if ($scope.currentMaterial && $scope.currentMaterial.Material.Id == material.Material.Id)
			{
				return "panel-primary";
			}
			else
			{
				return "panel-default";
			}
		};
	});
</script>